
SSL_Check

/**
 * ✅ Verificación avanzada de SSL (fecha y validez)
 */
function verificar_ssl_expiracion($url) {
    if (!preg_match('#^https://#', $url)) {
        return "⚠️ The site does not use HTTPS, therefore it has no SSL certificate.";
    }

    $host = parse_url($url, PHP_URL_HOST);
    if (!$host) {
        return "❌ Unable to analyze the site domain.";
    }

    $ip = gethostbyname($host);
    if ($ip === $host) {
        return "⚠️ The entered domain does not exist or is currently inactive.";
    }

    $context = stream_context_create(["ssl" => ["capture_peer_cert" => true]]);
    $client = @stream_socket_client("ssl://{$host}:443", $errno, $errstr, 10, STREAM_CLIENT_CONNECT, $context);

    if (!$client) {
        return "⚠️ SSL verification could not be completed. The server may be blocking external connections.";
    }

    $cont = stream_context_get_params($client);
    $cert = openssl_x509_parse($cont["options"]["ssl"]["peer_certificate"]);

    if (!$cert) {
        return "⚠️ SSL certificate could not be analyzed.";
    }

    $validFrom = date_create_from_format('U', $cert['validFrom_time_t']);
    $validTo   = date_create_from_format('U', $cert['validTo_time_t']);
    $today     = new DateTime();
    $daysLeft  = $today->diff($validTo)->days;

    if ($today > $validTo) {
        return "❌ SSL certificate expired on " . $validTo->format('d/m/Y') . ".";
    } elseif ($daysLeft <= 15) {
        return "⚠️ SSL certificate will expire in {$daysLeft} days (" . $validTo->format('d/m/Y') . ").";
    } else {
        return "✅ SSL certificate valid until " . $validTo->format('d/m/Y') . " ({$daysLeft} days remaining).";
    }
}
