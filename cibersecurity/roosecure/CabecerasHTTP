

/**
 * ✅ Security HTTP Headers Analysis
 */
function verificar_cabeceras_seguridad($url) {
    if (!preg_match('#^https?://#', $url)) {
        $url = 'https://' . $url;
    }

    $headers = @get_headers($url, 1);
    if ($headers === false) {
        return "⚠️ Unable to retrieve HTTP headers for analysis.";
    }

    $security_headers = [
        'Strict-Transport-Security' => 'Forces permanent HTTPS (HSTS)',
        'Content-Security-Policy'   => 'Controls script sources (CSP)',
        'X-Frame-Options'           => 'Prevents clickjacking attacks',
        'X-Content-Type-Options'    => 'Prevents MIME type sniffing',
        'Referrer-Policy'           => 'Controls referrer information',
        'Permissions-Policy'        => 'Restricts browser API permissions'
    ];

    $missing = [];
    $present = [];

    foreach ($security_headers as $header => $description) {
        $found = false;
        foreach ($headers as $key => $value) {
            if (stripos($key, $header) !== false) {
                $found = true;
                $present[] = "✅ $header detected.";
                break;
            }
        }
        if (!$found) {
            $missing[] = "⚠️ Missing: $header → $description.";
        }
    }

    $report  = "Security HTTP Headers Analysis\n";
    if (!empty($present)) {
        $report .= implode("\n", $present) . "\n";
    }
    if (!empty($missing)) {
        $report .= implode("\n", $missing);
    }

    return $report;
}
